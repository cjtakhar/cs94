/*
 This Bicep file deploys an azure storage account. The resource group specified is automatically CREATED. 

 Parameters:
 - storageAccountName (string): The name of the storage account to create
 - location (string): The name of the Azure region where the resources will be deployed, defaults to the region
                      of the resource group is located in.
 - skuName (string): The SKU name for the storage account defaults to Standard_LRS
 - accessTier (string): The access tier for the storage account defaults to Hot
 - networkDefaultAction (string) Specifying if public access is allowed, default is false
 - allowPublicAccess (string) Indicates the default network action. Default is Allow

Usage:
1. Set the desired values for the parameters
2. Deploy the Bicep file using the Azure CLI or PowerShell

 Examples must be all on the same line broken out here for clarity
 
Azure CLI:
// Documentation:
// This deployment command targets the subscription level to deploy a Bicep template file.
// The unique deployment name is dynamically generated using the current date and time in the "yyyyMMddHHMMss" format.
// 
// Parameters:
// • resourceGroupName: Specifies the existing resource group ("rg_02_lecture") where the storage account will be created.
// • storageAccountName: Represents the name of the storage account to be deployed (replace the placeholder with an appropriate, unique name adhering to Azure naming conventions).
//
// Purpose:
// The Bicep template ("createStorageAccountWithRg.bicep") creates an Azure Storage Account within the specified resource group.
// This approach supports automated deployments by parameterizing key resource names and leveraging a time-based unique suffix.
az deployment sub create --name $("createStorageAccount_" + (Get-Date -Format "yyyyMMddHHMMss")) --location eastus --template-file createStorageAccountWithRg.bicep --parameters storageAccountName=stbicepdemobicep location=eastus resourceGroupName=rg_02_biceplecture

Powershell:
//Documentation:
//  This deployment script is designed to create a new resource group and an associated storage account.
//  The deployment name is dynamically generated by concatenating a static prefix ("createStorageAccount_") with the current date and time in "yyyyMMddHHMMss" format, ensuring uniqueness.
//  
//  Parameters:
//    • resourceGroupName:
//        Specifies the name of the resource group to be created (e.g., 'rg_02_lecture').
//    
//    • storageAccountName:
//        Specifies the desired name for the storage account (e.g., 'stbicepdemo03').
//
New-AzSubscriptionDeployment -Name ("createStorageAccount_" + (Get-Date -Format "yyyyMMddHHMMss")) -Location 'eastus' -TemplateFile 'createStorageAccountWithRg.bicep' -TemplateParameterObject @{storageAccountName='stbicepdemobicep'; location='eastus'; resourceGroupName='rg_02_biceplecture'; }
*/

// Parameter to specify the name of the storage account
@description('The name of the storage account to create')
param storageAccountName string

// Parameter to specify the location of the storage account, and 
// resource group
@description('The location of the storage account and resource group')
param location string = 'eastus'

// Parameter to specify the name of the resource group
@description('The name of the resource group')
param resourceGroupName string = 'rg_02_lecture_stdemo_bicep'

// Parameter to specify the SKU name of the storage account
@description('The the SKU defaults to Standard_LRS')
param skuName string = 'Standard_LRS' // Standard Locally-Redundant Storage

// Parameter to specify the access tier of the storage account
@description('The access tier of the storage account, defaults to Hot')
param accessTier string = 'Hot'

// Parameter to specify if public access is allowed
@description('Specifying if public access is allowed, default is false')
param allowPublicAccess bool = false

@description('Indicates the default network action. Default is Allow')
@allowed(['Allow','Deny'])
param networkDefaultAction string ='Allow'

/**
 * Description:
 *   This file creates a resource group at the subscription scope.
 *
 * Details:
 *   - The file sets the target scope to the subscription level.
 *   - It defines a resource group resource using the Microsoft.Resources/resourceGroups API (version 2021-04-01).
 *
 * Parameters:
 *   - resourceGroupName: Specifies the name of the resource group.
 *   - location: Specifies the location where the resource group will be created.
 */
targetScope = 'subscription'

resource resourceGroup 'Microsoft.Resources/resourceGroups@2021-04-01' = {
  name: resourceGroupName
  location: location
}


/*
  Module: appService
  Description:
    This module deploys a Storage Account by invoking an external module (createStorageAccountModule.bicep)
    within a specific resource group scope. It leverages the parameters supplied from the parent module to
    configure properties such as the storage account name, SKU, location, access tier, public access setting,
    and network default action.

  Parameters:
    - storageAccountName: The unique name for the Storage Account to be created.
    - skuName: Specifies the SKU/plan details for the Storage Account.
    - location: The Azure region where the resource will be deployed.
    - accessTier: Determines the access tier (e.g., Hot, Cool) for the Storage Account.
    - allowPublicAccess: Boolean flag indicating if the Storage Account should permit public access.
    - networkDefaultAction: Specifies the default network action for the Storage Account networking rules.

  Scope:
    - The module is deployed within the context of a resource group.

  Reference:
    - External module file: createStorageAccountModule.bicep
*/
module storageAccount 'createStorageAccountModule.bicep' = {
  name: 'appService2025-02-06'
  scope: resourceGroup
  params: {
    storageAccountName: storageAccountName
    skuName: skuName
    location: location
    accessTier: accessTier
    allowPublicAccess: allowPublicAccess
    networkDefaultAction: networkDefaultAction    
  }
}


